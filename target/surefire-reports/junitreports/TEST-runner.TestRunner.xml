<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="LIN24010693" failures="0" tests="6" name="runner.TestRunner" time="129.442" errors="1" timestamp="2023-03-12T15:36:55 IST" skipped="0">
  <testcase classname="runner.TestRunner" name="runScenario" time="15.480"/>
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: Deboard the edge| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on edges| 
| Clicked on edge.| 
| Edge details page is displayed| 
| Click on Manage button| 
| Manage Edge page is displayed| 
| Clicked on deboard button| 
| Deboard edge warning popup message page is displayed| 
| Clicked on confirm button| 
| Zone page is displayed| 
| Clicked on edges| 
| Execution status is: PASSED| ]]>
  </system-out>
  <testcase classname="runner.TestRunner" name="runScenario" time="33.522">
    <error message="no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;//div[contains(text(),&#039;Manage Edge Details&#039;)]&quot;}
  (Session info: chrome=110.0.5481.180)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: &#039;4.1.1&#039;, revision: &#039;e8fcc2cecf&#039;
System info: host: &#039;LIN24010693&#039;, ip: &#039;192.168.1.2&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;16&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0c52e1115c1c28c5093e3568d4b11b7d, findElement {using=xpath, value=//div[contains(text(),&#039;Manage Edge Details&#039;)]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.180, chrome: {chromedriverVersion: 110.0.5481.77 (65ed616c6e8e..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64664}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: eager, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64664/devtoo..., se:cdpVersion: 110.0.5481.180, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 0c52e1115c1c28c5093e3568d4b11b7d" type="org.openqa.selenium.NoSuchElementException">
      <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[contains(text(),'Manage Edge Details')]"}
  (Session info: chrome=110.0.5481.180)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.1', revision: 'e8fcc2cecf'
System info: host: 'LIN24010693', ip: '192.168.1.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0c52e1115c1c28c5093e3568d4b11b7d, findElement {using=xpath, value=//div[contains(text(),'Manage Edge Details')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.180, chrome: {chromedriverVersion: 110.0.5481.77 (65ed616c6e8e..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64664}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: eager, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64664/devtoo..., se:cdpVersion: 110.0.5481.180, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 0c52e1115c1c28c5093e3568d4b11b7d
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:367)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at com.epam.healenium.handlers.proxy.BaseHandler.findElement(BaseHandler.java:62)
at com.epam.healenium.handlers.proxy.SelfHealingProxyInvocationHandler.invoke(SelfHealingProxyInvocationHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy41.findElement(Unknown Source)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy45.isDisplayed(Unknown Source)
at com.sogeti.automation.test.pageFactory.E2CO_EdgesPage.verifyManageEdgeDetailsPageIsDisplayed(E2CO_EdgesPage.java:528)
at stepdefinitions.E2COTestSteps.verifyManageEdgesDetailsPageIsDisplaying(E2COTestSteps.java:886)
at âœ½.Manage edge page is displayed(file:///C:/Users/APathrut/eclipse-workspace/e2colitmus/E2CO%2520Automation/src/test/resources/Features/WebUITests/E2COTests_Edges.feature:53)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: Edges end to end scenario| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on edges| 
| Enter EdgeId| 
| Zone Id selected| 
| Country is selected| 
| Latency is selected| 
| Enter EnterPrise Id| 
| Bandwidth is selected| 
| Enter Edge description| 
| Enter city name| 
| Enter city name| 
| Enter the locality name| 
| Radio is selected| 
| Enter MCC value| 
| Enter MNC value| 
| Enter CGI value| 
| Enter TAC value| 
| App availability is selected| 
| Load is selected| 
| Enter cluster name| 
| Enter Latitude value| 
| Enter Longitude value| 
| Click on submit button| 
| EdgeId is displayed| 
| Clicked on edge.| 
| Edge details page is displayed| 
| Click on Manage button| 
| Execution status is: FAILED| ]]>
  </system-out>
  <testcase classname="runner.TestRunner" name="runScenario" time="33.761"/>
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: Edges end to end scenario| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on edges| 
| Enter EdgeId| 
| Zone Id selected| 
| Country is selected| 
| Latency is selected| 
| Enter EnterPrise Id| 
| Bandwidth is selected| 
| Enter Edge description| 
| Enter city name| 
| Enter city name| 
| Enter the locality name| 
| Radio is selected| 
| Enter MCC value| 
| Enter MNC value| 
| Enter CGI value| 
| Enter TAC value| 
| App availability is selected| 
| Load is selected| 
| Enter cluster name| 
| Enter Latitude value| 
| Enter Longitude value| 
| Click on submit button| 
| EdgeId is displayed| 
| Clicked on edge.| 
| Edge details page is displayed| 
| Click on Manage button| 
| Manage Edge page is displayed| 
| Clicked on deboard button| 
| Deboard edge warning popup message page is displayed| 
| Clicked on confirm button| 
| Zone page is displayed| 
| Clicked on edges| 
| Execution status is: PASSED| ]]>
  </system-out>
  <testcase classname="runner.TestRunner" name="runScenario" time="14.350"/>
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: preprovision the edge| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on edges| 
| Enter EdgeId| 
| Zone Id selected| 
| Country is selected| 
| Latency is selected| 
| Enter EnterPrise Id| 
| Bandwidth is selected| 
| Enter Edge description| 
| Enter city name| 
| Enter city name| 
| Enter the locality name| 
| Radio is selected| 
| Enter MCC value| 
| Enter MNC value| 
| Enter CGI value| 
| Enter TAC value| 
| App availability is selected| 
| Load is selected| 
| Enter cluster name| 
| Enter Latitude value| 
| Enter Longitude value| 
| Click on submit button| 
| EdgeId is displayed| 
| Execution status is: PASSED| ]]>
  </system-out>
  <testcase classname="runner.TestRunner" name="runScenario" time="15.768"/>
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: Deboard the edge| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on edges| 
| Clicked on edge.| 
| Edge details page is displayed| 
| Click on Manage button| 
| Manage Edge page is displayed| 
| Clicked on deboard button| 
| Deboard edge warning popup message page is displayed| 
| Clicked on confirm button| 
| Zone page is displayed| 
| Clicked on edges| 
| Execution status is: PASSED| ]]>
  </system-out>
  <testcase classname="runner.TestRunner" name="runScenario" time="16.561"/>
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Received parameter 'ExecutionServer' = Local| 
| Received parameter 'InterfaceType' = Web| 
| Received parameter 'DefaultDownloadPath' = ./src/test/resources/Downloads| 
| Received parameter 'AZURE_KEYVAULT_URL' = | 
| Received parameter 'TestBrowser' = chrome| 
| Received parameter 'UI_BASE_URL' = https://10.139.9.3:31012/MEC/login| 
| Received parameter 'GRID_HUB_PORT' = 4444| 
| Received parameter 'GRID_HUB_IP' = localhost| 
| Received parameter 'UI_USERNAME' = admin| 
| Received parameter 'UI_PASSWORD' = Admin@1234| 
| Received parameter 'UI_DOMAINNAME' = default| 
| Received parameter 'UI_DEVUSERNAME' = dev01| 
| Received parameter 'UI_DEVPASSWORD' = Admin@1234| 
| Received parameter 'UI_DEVDOMAINNAME' = default| 
| Received parameter 'ScreenshotEnable' = true| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: preprovision the edge| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on edges| 
| Enter EdgeId| 
| Zone Id selected| 
| Country is selected| 
| Latency is selected| 
| Enter EnterPrise Id| 
| Bandwidth is selected| 
| Enter Edge description| 
| Enter city name| 
| Enter city name| 
| Enter the locality name| 
| Radio is selected| 
| Enter MCC value| 
| Enter MNC value| 
| Enter CGI value| 
| Enter TAC value| 
| App availability is selected| 
| Load is selected| 
| Enter cluster name| 
| Enter Latitude value| 
| Enter Longitude value| 
| Click on submit button| 
| EdgeId is displayed| 
| Execution status is: PASSED| ]]>
  </system-out>
</testsuite> <!-- runner.TestRunner -->
