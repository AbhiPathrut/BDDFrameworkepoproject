<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="lin20001532" failures="0" tests="5" name="runner.TestRunner" time="273.945" errors="1" timestamp="2023-04-07T16:14:38 IST" skipped="0">
  <testcase classname="runner.TestRunner" name="runScenario" time="50.030"/>
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: user able to deprovision application for enterprise| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on my application menu for enterprise.| 
| Clicked on application which is running| 
| Runnig app details page is opned| 
| Clicked on deprovision button| 
| Warning popup message is dispalyed| 
| Clicked on confirm button| 
| Page is refreshed| 
| App is onboarded or deprovisioned successfully.| 
| Execution status is: PASSED| ]]>
  </system-out>
  <testcase classname="runner.TestRunner" name="runScenario" time="49.842"/>
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: user able to provision application for enterprise| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on my application menu for enterprise.| 
| Clicked on application for provision| 
| User is on application provision page| 
| Zone selected| 
| Clicked on provision button| 
| Request accepted message is displayed| 
| Page is refreshed| 
| App is provisioned.| 
| Execution status is: PASSED| ]]>
  </system-out>
  <testcase classname="runner.TestRunner" name="runScenario" time="117.420"/>
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: user able to onboard application for enterprise| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on my application menu for enterprise.| 
| Selected container| 
| Container as service selected| 
| Clicked on import button| 
| Upload Your File ! is displayed| 
| YAML file is imported| 
| Clicked on submit button| 
| Imported data is displaying on the page| 
| Clicked on select artifact| 
| Artifact List is displayed| 
| Clicked on done button| 
| Updated app name| 
| Latency selected| 
| Zone selected| 
| Updated componenet ID| 
| Updated network| 
| Clicked on submit button| 
| Onboarding request accepted is message displayed| 
| Clicked on close| 
| Application is displayed| 
| Page is refreshed| 
| App is onboarded or deprovisioned successfully.| 
| Execution status is: PASSED| ]]>
  </system-out>
  <testcase classname="runner.TestRunner" name="runScenario" time="42.234"/>
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Received parameter 'ExecutionServer' = Local| 
| Received parameter 'InterfaceType' = Web| 
| Received parameter 'DefaultDownloadPath' = ./src/test/resources/Downloads| 
| Received parameter 'AZURE_KEYVAULT_URL' = | 
| Received parameter 'TestBrowser' = chrome| 
| Received parameter 'UI_BASE_URL' = https://10.139.9.14:31012/MEC/login| 
| Received parameter 'GRID_HUB_PORT' = 4444| 
| Received parameter 'GRID_HUB_IP' = localhost| 
| Received parameter 'UI_USERNAME' = admin| 
| Received parameter 'UI_PASSWORD' = Admin@1234| 
| Received parameter 'UI_DOMAINNAME' = default| 
| Received parameter 'UI_DEVUSERNAME' = dev01| 
| Received parameter 'UI_DEVPASSWORD' = Admin@1234| 
| Received parameter 'UI_DEVDOMAINNAME' = default| 
| Received parameter 'UI_ENTUSERNAME' = admin01| 
| Received parameter 'UI_ENTPASSWORD' = Admin@1234| 
| Received parameter 'UI_ENTDOMAINNAME' = default| 
| Received parameter 'UI_ENTDEVUSERNAME' = dev08| 
| Received parameter 'UI_ENTDEVPASSWORD' = Admin@1234| 
| Received parameter 'UI_ENTDEVDOMAINNAME' = default| 
| Received parameter 'ScreenshotEnable' = true| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: Create new artifactId for enterprise| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on my application menu for enterprise.| 
| Selected container| 
| Container as service selected| 
| Clicked on create new artifact| 
| Entered artifact name| 
| Enetered componenetID| 
| Entered componenet image name| 
| zip file is imported| 
| Clicked on submit button| 
| Artifact created successfully| 
| Clicked on close| 
| Clicked on select artifact| 
| Artifact is displayed| 
| Execution status is: PASSED| ]]>
  </system-out>
  <testcase classname="runner.TestRunner" name="runScenario" time="14.419">
    <error message="The step &#039;user able to see application is removed from the list for enterprise&#039; is undefined.
You can implement this step using the snippet(s) below:

@Then(&quot;user able to see application is removed from the list for enterprise&quot;)
public void user_able_to_see_application_is_removed_from_the_list_for_enterprise() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.testng.UndefinedStepException">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'user able to see application is removed from the list for enterprise' is undefined.
You can implement this step using the snippet(s) below:

@Then("user able to see application is removed from the list for enterprise")
public void user_able_to_see_application_is_removed_from_the_list_for_enterprise() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:128)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:112)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <system-out>
    <![CDATA[| Received parameter 'TestEnvironment' = QA| 
| Initializing self healing driver| 
| New driver instantiated.| 
| Received parameter 'TestEnvironment' = QA| 
| Scenario Name: user able to deboard application for enterprise| 
| Received parameter 'TestEnvironment' = QA| 
| Entered username| 
| Entered password| 
| Entered domain| 
| User icon is displayed.| 
| Clicked on my application menu for enterprise.| 
| Clicked on application which is onboarded or onboardingpending| 
| User is on application provision page| 
| Click on deboarding button| 
| Deboarding warning popup message is displayed| 
| Clicked on confirm button| 
| Execution status is: UNDEFINED| ]]>
  </system-out>
</testsuite> <!-- runner.TestRunner -->
